# -*- coding: utf-8 -*-
"""server_main.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16U8nkoGuMLTweJ05uLCes81IpLSynhNP
"""

#### 필수 requirements####
# conda install –c conda-forge cudatoolkit=11.3 cudnn=8.1
# pip install tensorflow-gpu==2.6.0
# conda install pytorch==1.10.1 torchvision==0.11.2 torchaudio==0.10.1 -c pytorch

#### requirements for kobert####
# pip install transformers
# pip install gluonnlp numpy
# pip install git+https://git@github.com/SKTBrain/KoBERT.git@master

#### requirements for NER ####
# pip install konlpy
# git clone https://github.com/lovit/customized_konlpy.git
# pip install customized_konlpy
# pip install Twitter

#### requirements for camera ####
# requirements.txt

#-----------------------------------------------------------------------------------------------------------------------
#-----------------------------------------------------------------------------------------------------------------------
import time

#소켓 통신
from socket import *
import threading
import time



#Object Detection 모듈
#import cv2
#import camera as cam
#import yolo

#HOST = '141.223.140.80' # 고다 워크스테이션
#PORT = 12345 # Port 번호
#API_KEY = "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"

######################################

ip = '192.168.0.17'  # 서버의 IP 주소
port = 8001  # 서버의 포트 번호

def send(sock):
    while True:
        sendData = input('>>>')
        sock.send(sendData.encode('utf-8'))


def receive(sock):
    while True:
        audio_sentence = sock.recv(1024)
        print('상대방 :', audio_sentence.decode('utf-8'))


port = 8001

serverSock = socket(AF_INET, SOCK_STREAM)
serverSock.bind(('192.168.0.13', port))
serverSock.listen(1)

print('%d번 포트로 접속 대기중...'%port)

connectionSock, addr = serverSock.accept()

print(str(addr), '에서 접속되었습니다.')

sender = threading.Thread(target=send, args=(connectionSock,))
receiver = threading.Thread(target=receive, args=(connectionSock,))

sender.start()
receiver.start()

######################################


# clientSock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
# clientSock.connect((ip, port))
# print('서버에 연결되었습니다.')

# # 메시지 수신
# recvData = clientSock.recv(1024)
# audio_sentence = recvData.decode('utf-8')
# print('서버로부터 메시지를 수신하였습니다:', audio_sentence)

# # 서버 연결 종료
# clientSock.close()
# print('서버 연결을 종료하였습니다.')



#NLP 모듈
import kobert
import ner
from chatgpt import gpt_qa

try:
    # 상황 분류를 위한 kobert 모델
    model = kobert.make_train_model()

    ner_data = ner.preprocess_df()
    dictionary, tagger = ner.create_tagger(ner_data)
    print('Set NLP Model')

    while True :
        # 1) 노트북에서 stt를 통해 문장을 받아온다
        #audio_sentence = client.recv(1024).decode()
        # audio_sentence = input()
        print(audio_sentence)

        # 2) 문장을 kobert 모델을 통해 상황 분류
        intention = kobert.predict(model, audio_sentence)
        noun_list = ner.ner(tagger, audio_sentence)
        # 2-1 ) 길안내 필요한 상황
        if intention == "책찾기":
          print("책찾기")
          print("책찾기")
          book_name = ner.recogize_book(ner_data, dictionary, tagger, audio_sentence)
          if book_name != 0:
            info = ner_data[ner_data['Title'] == book_name]
            location = info.iloc[0]['Location Code']
            answer = f'{book_name} 도서는 {location} 구역에 있습니다. 안내해드리겠습니다.'
            dest = '길안내를 시작합니다'
            print(dest)
            break
          else:
             print('해당 도서의 정보가 존재하지 않습니다. 책 이름을 확인해주세요.')
        
        elif intention == "책추천":
          print("책추천")
          recommend = ner.get_recommend(tagger, audio_sentence, data, 3)
          recommend_list = recommend['Title'].tolist()
          print(*recommend_list)

except Exception as e :
  print('Failed, Error Message : ', e)
finally :
  print('Close')
  # s1.close()
  # s2.close()


  # while True:
  #   time.sleep(1)
  #   pass
